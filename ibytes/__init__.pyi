from typing import ByteString, Tuple


class ibytes:
    def __init__(self, obj: ByteString) -> None:
        ...

    def uint8(self) -> int:
        ...

    def uint16(self) -> int:
        ...

    def uint32(self) -> int:
        ...

    def uint64(self) -> int:
        ...

    def variable(self) -> int:
        ...

    def get_index(self) -> int:
        ...

    def set_index(self, index: int) -> None:
        ...

    def get(self, n: int) -> bytes:
        ...

    def get_obj(self, n: int) -> "ibytes":
        ...

    def get_tuple(self, n: int) -> Tuple[int, ...]:
        ...

    def get_old(self) -> bytes:
        ...

    def find(self, key: ByteString, start: int, end: int) -> int:
        ...

    def raw_find(self, key: ByteString, start: int, end: int) -> int:
        ...

    def vectors(self, length: int) -> "ibytes":
        ...

    def next(self, length: int) -> None:
        ...

    def cpointer(self) -> int:
        ...
